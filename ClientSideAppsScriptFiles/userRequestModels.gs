var getDataFromSheetRequest = [
  {
    response:"GetSpreadsheet",
    objectModel:'$SpreadsheetApp',
    method:"openById",
    arguments:["$l.SpreadsheetId"]//SpreadsheetId
  },
  {
    response:"GetNamedRange",
    objectModel:"$l.GetSpreadsheet",
    method:'getRange',
    arguments:["$l.NamedRange"],//example arguments ["Sheet1!A1:C10"]
    callback:{
      response:"GetData",
      objectModel:'$l.GetNamedRange',
      method:'getValues', 
    },
  },
  {
    declare:{
      BodyJSON:{
        'result':'Success',
        'output':'$l.GetData'
      }
    },
    callback:{
      response:'StringifyBodyJSON',
      objectModel:'$JSON',
      method:'stringify',
      arguments:['$l.BodyJSON']
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:['$l.StringifyBodyJSON'],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var sendDataToSheetRequest = [
  {
    response:"GetSpreadsheet",
    objectModel:'$SpreadsheetApp',
    method:"openById",
    arguments:["$l.SpreadsheetId"],//SpreadsheetId
    callback:{  
      response:'Sheet',
      objectModel:'$l.GetSpreadsheet',
      method:"getSheetByName",
      arguments:["$l.SheetName"]
    }
  },
  {
    response:'GetLastRow',
    objectModel:'$l.Sheet',
    method:'getLastRow',
    callback:{
      response:'TheLastRow',
      objectModel:'$operate',
      method:'add',
      arguments:['$l.GetLastRow',1]
    }
  },
  {
    response:'SetRange',
    objectModel:'$l.Sheet',
    method:'getRange',
    arguments:['$l.TheLastRow',1,"$l.array.length","$l.array[0].length"],//include row,column of data array
    callback:{
      response:'SetData',
      objectModel:'$l.SetRange',
      method:'setValues',
      arguments:["$l.array"]//data
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:[JSON.stringify({'result':'Success','output':'Data Exported Successfully'})],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var updateDataInSheetRequest = [
  {
    response:"GetSpreadsheet",
    objectModel:'$SpreadsheetApp',
    method:"openById",
    arguments:["$l.SpreadsheetId"]//SpreadsheetId
  },
  {
    response:"GetNamedRange",
    objectModel:"$l.GetSpreadsheet",
    method:'getRange',
    arguments:["$l.NamedRange"],//example arguments ["Sheet1!A1:C10"]
    callback:{
      response:"GetData",
      objectModel:'$l.GetNamedRange',
      method:'setValues',
      arguments:['$l.array'] 
    },
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:[JSON.stringify({'result':'Success','output':'Data Exported Successfully'})],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON']
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var searchFolderRequest = [
  {
    response:'Add1stPart',
    objectModel:'$operate',
    method:'add',
    arguments:["title = '","$l.SearchFolderName"],
    callback:{
      response:'SearchQuery',
      objectModel:'$operate',
      method:'add',
      arguments:['$l.Add1stPart',"'"]
    }
  },
  {
    response:'getFolder',
    objectModel:'$DriveApp',
    method:'searchFolders',
    arguments:['$l.SearchQuery'],
    callback:{
      response:'FolderExists',
      objectModel:'$l.getFolder',
      method:'hasNext',
    }
  },
  {
    condition:'$l.FolderExists == false',
    response:'FailedAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:[JSON.stringify({'result':'Failed','output':"Couldn't find a folder as entered in search field."})],
    callback:{
      response:'SendFailedAttemptResponse',
      objectModel:'$l.FailedAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendFailedAttemptResponse',
    exit:true
  },
  {
    response:"parent",
    objectModel:'$l.getFolder',
    method:'next',
    callback:{
      response:'json',
      objectModel:'$FileFolderInstance',
      method:'jsonForFolderV2',
      arguments:["$l.parent",JSON.parse(JSON.stringify({}))]
    }
  },
  {
    declare:{
      BodyJSON:{
        'result':'Success',
        'output':'$l.json'
      }
    },
    callback:{
      response:'StringifyBodyJSON',
      objectModel:'$JSON',
      method:'stringify',
      arguments:['$l.BodyJSON']
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:['$l.StringifyBodyJSON'],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var getFileContentRequest = [
  {
    response:'file',
    objectModel:'$DriveApp',
    method:'getFileById',
    arguments:['$l.FileId'],
    callback:{
      response:'GetBlobContent',
      objectModel:'$l.file',
      method:'getBlob',
      callback:{
        response:'GotFileContent',
        objectModel:'$l.GetBlobContent',
        method:'getDataAsString',
      }
    }
  },
  {
    declare:{
      BodyJSON:{
        'result':'Success',
        'content':'$l.GotFileContent'
      }
    },
    callback:{
      response:'StringifyBodyJSON',
      objectModel:'$JSON',
      method:'stringify',
      arguments:['$l.BodyJSON']
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:['$l.StringifyBodyJSON'],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var updateFileContentRequest = [
  {
    response:'file',
    objectModel:'$DriveApp',
    method:'getFileById',
    arguments:['$l.FileId'],
    callback:{
      response:'SetContent',
      objectModel:'$l.file',
      method:'setContent',
      arguments:['$l.content']
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:[JSON.stringify({'result':'Success','output':'Content Updated Successfully'})],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];
var invoiceFormRequest = [
  {
    response:"GetSpreadsheet",
    objectModel:'$SpreadsheetApp',
    method:"openById",
    arguments:["1ffczYrBikoQ49ijbqRHrAkZc0mJl4Ezb9fHfeocstmw"],//SpreadsheetId
    callback:{  
      response:'Sheet',
      objectModel:'$l.GetSpreadsheet',
      method:"getSheetByName",
      arguments:["invoiceForm"]
    }
  },
  {
    response:'GetLastRow',
    objectModel:'$l.Sheet',
    method:'getLastRow',
    callback:{
      response:'TheLastRow',
      objectModel:'$operate',
      method:'add',
      arguments:['$l.GetLastRow',1]
    }
  },
  {
    response:'SetRange',
    objectModel:'$l.Sheet',
    method:'getRange',
    arguments:['$l.TheLastRow',1,"$l.array.length","$l.array[0].length"],//include row,column of data array
    callback:{
      response:'SetData',
      objectModel:'$l.SetRange',
      method:'setValues',
      arguments:["$l.array"]//data
    }
  },
  {
    response:'SuccessfullAttempt',
    objectModel:'$ContentService',
    method:'createTextOutput',
    arguments:[JSON.stringify({'result':'Success','output':'Invoice Form Registered Successfully'})],
    callback:{
      response:'SendSuccessfullAttemptResponse',
      objectModel:'$l.SuccessfullAttempt',
      method:'setMimeType',
      arguments:['$ContentService.MimeType.JSON'],
    },
    return:'$l.SendSuccessfullAttemptResponse'
  }
];